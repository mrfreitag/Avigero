<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.mozilla.org/bugzilla.dtd">

<bugzilla version="3.6.4+"
          urlbase="https://bugzilla.mozilla.org/"
          
          maintainer="bugzilla-admin@mozilla.org"
>

    <bug>
          <bug_id>647855</bug_id>
          
          <creation_ts>2011-04-05 10:46:00 -0700</creation_ts>
          <short_desc>array index value gets reset to Zero if a null element is encountered</short_desc>
          <delta_ts>2011-04-05 15:55:26 -0700</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>3</classification_id>
          <classification>Components</classification>
          <product>Core</product>
          <component>JavaScript Engine</component>
          <version>2.0 Branch</version>
          <rep_platform>x86</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          
          
          
          <priority>--</priority>
          <bug_severity>normal</bug_severity>
          <target_milestone>---</target_milestone>
          
          
          
          
          <reporter name="Vernon Nemitz">vnemitz</reporter>
          <assigned_to>general</assigned_to>
          <cc>bzbarsky</cc>
          <qa_contact>general</qa_contact>
          <cf_blocking_fennec>---</cf_blocking_fennec>
          <cf_blocking_fx>---</cf_blocking_fx>
          <cf_blocking_20>---</cf_blocking_20>
          <cf_status_20>---</cf_status_20>
          <cf_blocking_192>---</cf_blocking_192>
          <cf_status_192>---</cf_status_192>
          <cf_blocking_191>---</cf_blocking_191>
          <cf_status_191>---</cf_status_191>
          
          
          
          
          
          
          
          
          
          

      

      

      

          <long_desc isprivate="0">
            <commentid>5391338</commentid>
            <who name="Vernon Nemitz">vnemitz</who>
            <bug_when>2011-04-05 10:46:54 -0700</bug_when>
            <thetext>User-Agent:       Mozilla/5.0 (Windows; U; Win95; en-US; rv:1.8.1.22) Gecko/20090605 SeaMonkey/1.1.17
Build Identifier: SeaMonkey/2.0.11

I had several &lt;input&gt; elements that I wanted to access efficiently via JavaScript, so I created an array and used document.getElementById() to fill the array.  However, one element had an out-of-sequence ID, which caused a middle array element to be NULL.  When looping through the array, the value of the index variable became reset to Zero when the NULL element was accessed.

Reproducible: Always

Steps to Reproduce:
Here is some HTML and JavaScript code:
&lt;body onload=&quot;initialize();&quot;&gt;

&lt;input id=&quot;word0&quot; size=&quot;8&quot; type=&quot;text&quot; readonly=&quot;true&quot; value=&quot;&quot; /&gt;&lt;br /&gt;
&lt;input id=&quot;word1&quot; size=&quot;8&quot; type=&quot;text&quot; readonly=&quot;true&quot; value=&quot;&quot; /&gt;&lt;br /&gt;
&lt;input id=&quot;word2&quot; size=&quot;8&quot; type=&quot;text&quot; readonly=&quot;true&quot; value=&quot;&quot; /&gt;&lt;br /&gt;
&lt;input id=&quot;word7&quot; size=&quot;8&quot; type=&quot;text&quot; readonly=&quot;true&quot; value=&quot;&quot; /&gt;&lt;br /&gt;
&lt;input id=&quot;word4&quot; size=&quot;8&quot; type=&quot;text&quot; readonly=&quot;true&quot; value=&quot;&quot; /&gt;&lt;br /&gt;
&lt;input id=&quot;word5&quot; size=&quot;8&quot; type=&quot;text&quot; readonly=&quot;true&quot; value=&quot;&quot; /&gt;&lt;br /&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
var word = new Array();
function initialize()
{ var indx, dat;
  for(indx=0; indx&lt;6; indx++) //obtain easy array-access to a group of HTML input elements
  { dat = &quot;word&quot; + indx;
    word[indx] = document.getElementById(dat);
    word[indx].value = &quot;hi&quot;; //assign a default value, to be changed later
  }
  return;
}
--&gt;
&lt;/script&gt;
&lt;/body&gt;

Notice that &quot;word3&quot; does not exist.  This causes the value of word[3] to be NULL.  Now note that variable &quot;indx&quot; is used to access the word[] array....
Actual Results:  
When accessing word[3], to set the value (by programmer not aware of the naming error of the HTML &quot;word3&quot; input element), an error message is generated (revealed if the Error Console is open).  However, what ALSO happens is the the value of the indx variable is mysteriously changed from 3 to Zero.  It becomes possible for the JavaScript to enter an endless loop.

Expected Results:  
The indx variable should not be affected if it happens to go up against a NULL array element, and so would allow a loop to end normally.  An error message regarding the NULL value of the array element is still appropriate, of course.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5391365</commentid>
            <who name="Philip Chee">philip.chee</who>
            <bug_when>2011-04-05 11:15:26 -0700</bug_when>
            <thetext>I think the problem is that your code is very fragile.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5391375</commentid>
            <who name="Boris Zbarsky (:bz)">bzbarsky</who>
            <bug_when>2011-04-05 11:22:36 -0700</bug_when>
            <thetext>This worksforme....  Please reopen if you have a testcase that shows the problem in a current trunk build.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5391591</commentid>
            <who name="Vernon Nemitz">vnemitz</who>
            <bug_when>2011-04-05 15:12:20 -0700</bug_when>
            <thetext>Boris, did you try it in a recent version of SeaMonkey?  That&apos;s what I was using (2.0.11) when my endless loop happened.  (Endless because with the index variable getting reset to Zero for the word[3] array-element, it never gets incremented enough to meet the exit condition.)  I do see that a couple more versions have since been released (and almost all my downloads are painfully slow, so I don&apos;t update quite as often as other folks).

It is possible that I may have left something out from the initial description; If I Recall Correctly, the error was more consistent during a page-refresh than on an initial page-load.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5391596</commentid>
            <who name="Boris Zbarsky (:bz)">bzbarsky</who>
            <bug_when>2011-04-05 15:14:34 -0700</bug_when>
            <thetext>I tried a Firefox build that uses the same javascript engine as the version of SeaMonkey you&apos;re using.

Please do attach a testcase before reopening.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <commentid>5391641</commentid>
            <who name="Vernon Nemitz">vnemitz</who>
            <bug_when>2011-04-05 15:55:26 -0700</bug_when>
            <thetext>All I can say is, this morning I had to use CTRL-ALT-DEL three times to kill the SeaMonkey task, because of the endless loop.  Very reliable problem, THEN.  But now I can&apos;t get it to happen, either.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>